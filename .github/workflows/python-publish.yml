# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test PYPI pipeline'
  push:
    branches:
      - "deploy"
    paths:
      - "frontend/**"
permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    environment: 
      name: pypi
      url: https://github.com/Vitalikys/peex-pypi-app.git

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: |
          python -m build
          ls 
          ls dist/

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: >-
        gh release upload
        'pyp' dist/**
        --repo 'https://github.com/Vitalikys/peex-pypi-app.git'

    # - name: Publish package distributions to GIT PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1.9
    #   with:
    #     repository-url: https://github.com/Vitalikys/peex-pypi-app
    #     #repository-url: https://github.com/Vitalikys/peex-pypi-app.git
    #     # user: __token__
    #     user: ${{ secrets.PYPI_API_TOKEN }} 
    #     password: ${{ secrets.PYPI_API_TOKEN }}
      
